总结：3种非递归遍历的共同点就是
			1.首先将根节点入站
			2.都是判断栈顶元素和栈顶元素左右节点的关系，以此来决定出战顺序 
		不同点：
			先序遍历：先判断站顶元素和右节点的关系，如存在，push 。再判断和做节点的关系，如存在，则push，然后根据栈的性质保证先序输出
			中序遍历：现将根节点和所有做节点入站，输出栈顶元素，在判断站顶元素和右节点的关系，如存在，push，然后移动指针到此，是否有做节点			有入站，木有输出该节点；不存在回溯到下一个站顶元素
					  输出当前元素，在判断当前元素的右节点是否存在，存在push，不存在回溯到下一个栈顶元素，类推。
			后序遍历：首先根节点和所有左孩子入栈，并移动node到左孩子，直到左孩子为空。
					  然后判断栈顶元素，如果栈顶元素没有右孩子或者右孩子已经被访问过，那么就访问该栈顶元素，并出栈；
					  如果栈顶元素有右孩子并且右孩子没有被访问过，那么把右孩子入栈，把node指针指向右孩子。
					  若栈不为空，则重复以上操作*/
